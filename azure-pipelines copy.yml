trigger:

- dev



 



resources:

- repo: self



 



variables:

  # Container registry service connection established during pipeline creation

  dockerRegistryServiceConnection: 'TbdContainerRegistry'

  rgServiceConnection: 'TBD-SHARED-PROD-RscGrp'

  imageRepository: 'coviddashboard'

  containerRegistry: 'tbdcontainerregistry.azurecr.io'

  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'

  webAppName: 'COVID19-AFC'

  tag: '$(Build.BuildId)'

  rgName: 'TBD-SHARED-PROD'

  

  # Agent VM image name

  vmImageName: 'ubuntu-latest'



 



stages:

- stage: Build

  displayName: Build and push stage

  jobs:  

  - job: Build

    displayName: Build

    pool:

      vmImage: $(vmImageName)

    steps:

    - task: Docker@2

      displayName: Build and push an image to container registry

      inputs:

        command: buildAndPush

        repository: $(imageRepository)

        dockerfile: $(dockerfilePath)

        containerRegistry: $(dockerRegistryServiceConnection)

        tags: |

          $(tag)



 



- stage: 'Devlopment'

  displayName: 'Deploy to Dev Slot'

  condition: succeeded()

  jobs:

  - job: Deploy

    displayName: Deploy

    pool:

      vmImage: 'Ubuntu-16.04'

    steps:

    - task: AzureRmWebAppDeployment@4

      inputs:

        ConnectionType: 'AzureRM'

        azureSubscription: $(rgServiceConnection)

        appType: 'webAppContainer'

        WebAppName: $(webAppName)

        ResourceGroupName: $(rgName)

        DockerNamespace: $(containerRegistry)

        DockerRepository: $(imageRepository)

        DockerImageTag: $(tag)
